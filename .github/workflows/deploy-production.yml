name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL_PROD }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY_PROD }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY_PROD }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NODE_ENV: production

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: '.next'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Run post-deployment health check
        run: |
          sleep 30
          curl -f ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}/api/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Deployment successful to ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed"
          exit 1

  deploy-vercel:
    name: Deploy to Vercel (Alternative)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && false # Disabled by default
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: deploy-netlify
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 60

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}
            ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}/explorar
            ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}/buscar
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-netlify, lighthouse]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify success
        if: needs.deploy-netlify.result == 'success'
        run: |
          echo "üöÄ Production deployment successful!"
          echo "URL: ${{ secrets.NEXT_PUBLIC_APP_URL_PROD }}"
          echo "Commit: ${{ github.sha }}"

      - name: Notify failure
        if: needs.deploy-netlify.result == 'failure'
        run: |
          echo "üí• Production deployment failed!"
          echo "Commit: ${{ github.sha }}"
          exit 1